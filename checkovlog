root@ip-172-31-6-72:~/devsecops-jenkins-sast-sca-iac-cs-dast-e2e-repo# checkov -s -f main.tf
[ secrets framework ]: 100%|████████████████████|[1/1], Current File Scanned=main.tftf
[ terraform framework ]: 100%|████████████████████|[1/1], Current File Scanned=main.tf

       _               _              
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V / 
  \___|_| |_|\___|\___|_|\_\___/ \_/  
                                      
By bridgecrew.io | version: 2.5.15 

terraform scan results:

Passed checks: 12, Failed checks: 15, Skipped checks: 0

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /main.tf:5-7
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5.html
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: aws_security_group.jenkins_sg
	File: /main.tf:21-53
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80.html
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.jenkins_sg
	File: /main.tf:21-53
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/networking-2.html
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.jenkins_sg
	File: /main.tf:21-53
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports.html
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: aws_iam_role.test_role
	File: /main.tf:76-94
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45.html
Check: CKV_AWS_274: "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy"
	PASSED for resource: aws_iam_role.test_role
	File: /main.tf:76-94
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.test_role
	File: /main.tf:76-94
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44.html
Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.web
	File: /main.tf:119-129
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1.html
Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.web
	File: /main.tf:119-129
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/public-policies/public-12.html
Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.jenkins_sg
	File: /main.tf:21-53
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis.html
Check: CKV2_AWS_41: "Ensure an IAM role is attached to EC2 instance"
	PASSED for resource: aws_instance.web
	File: /main.tf:119-129
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance.html
Check: CKV2_AWS_56: "Ensure AWS Managed IAMFullAccess IAM policy is not used."
	PASSED for resource: aws_iam_role.test_role
	File: /main.tf:76-94
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	FAILED for resource: aws_security_group.jenkins_sg
	File: /main.tf:21-53
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/networking-1-port-security.html

		21 | resource "aws_security_group" "jenkins_sg" {
		22 |   name        = "jenkins_sg"
		23 |   description = "Allow Jenkins Traffic"
		24 |   vpc_id      = var.vpc_id
		25 | 
		26 |   ingress {
		27 |     description      = "Allow from Personal CIDR block"
		28 |     from_port        = 8081
		29 |     to_port          = 8081
		30 |     protocol         = "tcp"
		31 |     cidr_blocks      = ["0.0.0.0/0"]
		32 |   }
		33 | 
		34 |   ingress {
		35 |     description      = "Allow SSH from Personal CIDR block"
		36 |     from_port        = 22
		37 |     to_port          = 22
		38 |     protocol         = "tcp"
		39 |     cidr_blocks      = ["0.0.0.0/0"]
		40 |   }
		41 | 
		42 |   egress {
		43 |     from_port        = 0
		44 |     to_port          = 0
		45 |     protocol         = "-1"
		46 |     cidr_blocks      = ["0.0.0.0/0"]
		47 |     ipv6_cidr_blocks = ["::/0"]
		48 |   }
		49 | 
		50 |   tags = {
		51 |     Name = "Jenkins SG"
		52 |   }
		53 | }

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.jenkins_sg
	File: /main.tf:21-53
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/networking-31.html

		21 | resource "aws_security_group" "jenkins_sg" {
		22 |   name        = "jenkins_sg"
		23 |   description = "Allow Jenkins Traffic"
		24 |   vpc_id      = var.vpc_id
		25 | 
		26 |   ingress {
		27 |     description      = "Allow from Personal CIDR block"
		28 |     from_port        = 8081
		29 |     to_port          = 8081
		30 |     protocol         = "tcp"
		31 |     cidr_blocks      = ["0.0.0.0/0"]
		32 |   }
		33 | 
		34 |   ingress {
		35 |     description      = "Allow SSH from Personal CIDR block"
		36 |     from_port        = 22
		37 |     to_port          = 22
		38 |     protocol         = "tcp"
		39 |     cidr_blocks      = ["0.0.0.0/0"]
		40 |   }
		41 | 
		42 |   egress {
		43 |     from_port        = 0
		44 |     to_port          = 0
		45 |     protocol         = "-1"
		46 |     cidr_blocks      = ["0.0.0.0/0"]
		47 |     ipv6_cidr_blocks = ["::/0"]
		48 |   }
		49 | 
		50 |   tags = {
		51 |     Name = "Jenkins SG"
		52 |   }
		53 | }

Check: CKV_AWS_288: "Ensure IAM policies does not allow data exfiltration"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117
	Guide: https://docs.bridgecrew.io/docs/iam_47

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }

Check: CKV_AWS_287: "Ensure IAM policies does not allow credentials exposure"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }

Check: CKV_AWS_290: "Ensure IAM policies does not allow write access without constraints"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }

Check: CKV_AWS_355: "Ensure no IAM policies documents allow "*" as a statement's resource for restrictable actions"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-iam-policies/iam-48.html

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }

Check: CKV_AWS_286: "Ensure IAM policies does not allow privilege escalation"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }

Check: CKV_AWS_289: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }

Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.web
	File: /main.tf:119-129
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized.html

		119 | resource "aws_instance" "web" {
		120 |   ami             = data.aws_ami.amazon_linux.id
		121 |   instance_type   = "t2.xlarge" 
		122 |   key_name        = var.key_name
		123 |   iam_instance_profile = "${aws_iam_instance_profile.test_profile.name}"
		124 |   security_groups = [aws_security_group.jenkins_sg.name]
		125 |   user_data       = "${file("install_jenkins.sh")}"
		126 |   tags = {
		127 |     Name = "Jenkins"
		128 |   }
		129 | }

Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.web
	File: /main.tf:119-129
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-general-policies/general-13.html

		119 | resource "aws_instance" "web" {
		120 |   ami             = data.aws_ami.amazon_linux.id
		121 |   instance_type   = "t2.xlarge" 
		122 |   key_name        = var.key_name
		123 |   iam_instance_profile = "${aws_iam_instance_profile.test_profile.name}"
		124 |   security_groups = [aws_security_group.jenkins_sg.name]
		125 |   user_data       = "${file("install_jenkins.sh")}"
		126 |   tags = {
		127 |     Name = "Jenkins"
		128 |   }
		129 | }

Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.web
	File: /main.tf:119-129
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances.html

		119 | resource "aws_instance" "web" {
		120 |   ami             = data.aws_ami.amazon_linux.id
		121 |   instance_type   = "t2.xlarge" 
		122 |   key_name        = var.key_name
		123 |   iam_instance_profile = "${aws_iam_instance_profile.test_profile.name}"
		124 |   security_groups = [aws_security_group.jenkins_sg.name]
		125 |   user_data       = "${file("install_jenkins.sh")}"
		126 |   tags = {
		127 |     Name = "Jenkins"
		128 |   }
		129 | }

Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.web
	File: /main.tf:119-129
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-general-policies/bc-aws-general-31.html

		119 | resource "aws_instance" "web" {
		120 |   ami             = data.aws_ami.amazon_linux.id
		121 |   instance_type   = "t2.xlarge" 
		122 |   key_name        = var.key_name
		123 |   iam_instance_profile = "${aws_iam_instance_profile.test_profile.name}"
		124 |   security_groups = [aws_security_group.jenkins_sg.name]
		125 |   user_data       = "${file("install_jenkins.sh")}"
		126 |   tags = {
		127 |     Name = "Jenkins"
		128 |   }
		129 | }

Check: CKV2_AWS_40: "Ensure AWS IAM policy does not allow full IAM privileges"
	FAILED for resource: aws_iam_role_policy.test_policy
	File: /main.tf:101-117

		101 | resource "aws_iam_role_policy" "test_policy" {
		102 |   name = "test_policy"
		103 |   role = "${aws_iam_role.test_role.id}"
		104 | 
		105 |   policy = <<EOF
		106 | {
		107 |   "Version": "2012-10-17",
		108 |   "Statement": [
		109 |      {
		110 |             "Effect": "Allow",
		111 |             "Action": "*",
		112 |             "Resource": "*"
		113 |      }
		114 |   ]
		115 | }
		116 | EOF
		117 | }